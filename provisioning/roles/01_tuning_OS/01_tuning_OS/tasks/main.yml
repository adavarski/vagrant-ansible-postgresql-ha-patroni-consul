---
- name: install epel
  yum:
    name:
      - epel-release

- name: install packages
  yum:
    name:
      - chrony
      - libselinux-python
      - vim
      - vim-enhanced
      - mc
      - screen
      - ccze
#      - lnav
      - redhat-lsb-core
      - wget
      - yum-utils
      - htop
      - sudo
      - iftop
      - net-tools
      - elinks
      - lynx
      - bind-utils
      - deltarpm
      - lsof
      - tree
      - traceroute
      - tcpdump
      - nmap
      - unzip
#      - iperf3
      - lbzip2
      - fuse-sshfs
      - bash-completion
    state: latest
  notify:
    - chronyd start and enable

- name: copy .screenrc to root user
  copy:
    src: screenrc
    dest: /root/.screenrc
    owner: root
    group: root
    mode: '0600'

- name: edit bashrc, vimrc
  shell:
    echo "alias vi='vim'" >> /root/.bashrc && echo "colorscheme desert" >> /etc/vimrc

- name: set timezone
  timezone:
    name: "{{ TIMEZONE_OS }}"

- name: put SELinux in permissive mode
  selinux:
    policy: targeted
    state: permissive

- name: add mappings to /etc/hosts
  blockinfile:
    path: "{{ HOSTS_FILE }}"
    block: |
      {{ item.ip }} {{ item.name }}.{{ FAKE_DOMAIN }} {{ item.name }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item.name }}"
  with_items:
    - { name: "{{ HOST_NAME_DCS_01 }}", ip: "{{ HOST_IP_DCS_01 }}" }
    - { name: "{{ HOST_NAME_DCS_02 }}", ip: "{{ HOST_IP_DCS_02 }}" }
    - { name: "{{ HOST_NAME_DCS_03 }}", ip: "{{ HOST_IP_DCS_03 }}" }
    - { name: "{{ HOST_NAME_PG01 }}", ip: "{{ HOST_IP_PG01 }}" }
    - { name: "{{ HOST_NAME_PG02 }}", ip: "{{ HOST_IP_PG02 }}" }
    - { name: "{{ HOST_NAME_PG03 }}", ip: "{{ HOST_IP_PG03 }}" }
    - { name: "{{ HOST_NAME_HL_CLIENT }}", ip: "{{ HOST_IP_HL_CLIENT }}" }
  tags:
    - update_hosts

- name: firewalld disable
  service:
    name: firewalld
    state: stopped
    enabled: no

- name: set the russian locale on database and zabbix servers
  shell: |
    localedef -i en_US -f UTF-8 en_US.UTF-8
    localectl set-locale LANG=en_US.UTF-8
  notify:
    - system restart
#  when: host in groups['database']
  when: ('hl-pg0' in ansible_hostname) or ('hl-zabbix0' in ansible_hostname)
